{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chakr\\\\OneDrive\\\\Desktop\\\\ipl-dashboard\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // ✅ Add loading state\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedUser) {\n        setUser(JSON.parse(storedUser));\n      }\n      setLoading(false); // ✅ Finish loading\n    };\n    loadUser();\n  }, []);\n\n  // ✅ Login function (store user in state & localStorage)\n  const login = userData => {\n    console.log(\"authprovider login function\");\n    setUser(userData);\n    // Store token separately in localStorage\n    localStorage.setItem(\"token\", userData.token);\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n    console.log(\"authprovider login function   2\");\n  };\n\n  // ✅ Logout function (clear state & localStorage)\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: [!loading && children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use AuthContext\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","loadUser","storedUser","localStorage","getItem","JSON","parse","login","userData","console","log","setItem","token","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/chakr/OneDrive/Desktop/ipl-dashboard/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true); // ✅ Add loading state\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const storedUser = localStorage.getItem(\"user\");\r\n      if (storedUser) {\r\n        setUser(JSON.parse(storedUser));\r\n      }\r\n      setLoading(false); // ✅ Finish loading\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  // ✅ Login function (store user in state & localStorage)\r\n  const login = (userData) => {\r\n    console.log(\"authprovider login function\");\r\n    \r\n    setUser(userData);\r\n      // Store token separately in localStorage\r\n    localStorage.setItem(\"token\", userData.token);\r\n\r\n    localStorage.setItem(\"user\", JSON.stringify(userData));\r\n    console.log(\"authprovider login function   2\");\r\n  };\r\n\r\n  // ✅ Logout function (clear state & localStorage)\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\r\n      {!loading && children} {/* Prevent rendering until loaded */}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use AuthContext\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAIF,UAAU,EAAE;QACdJ,OAAO,CAACO,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MACjC;MACAF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,KAAK,GAAIC,QAAQ,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAE1CZ,OAAO,CAACU,QAAQ,CAAC;IACf;IACFL,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,KAAK,CAAC;IAE7CT,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACQ,SAAS,CAACL,QAAQ,CAAC,CAAC;IACtDC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD,CAAC;;EAED;EACA,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbK,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/BZ,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEU,KAAK;MAAEO,MAAM;MAAEf;IAAQ,CAAE;IAAAJ,QAAA,GAC3D,CAACI,OAAO,IAAIJ,QAAQ,EAAC,GAAC;EAAA;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAE3B,CAAC;;AAED;AAAAzB,EAAA,CA1CaF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA2CzB,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOpC,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAAC+B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}