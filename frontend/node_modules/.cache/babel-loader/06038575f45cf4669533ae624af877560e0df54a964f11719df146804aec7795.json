{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000\"; // Change if needed\n\n// âœ… Centralized Token Management\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    alert(\"User not logged in!\");\n    window.location.href = \"/login\"; // Redirect to login page\n    return null;\n  }\n  return {\n    Authorization: `Bearer ${token}`\n  };\n};\n\n// âœ… Generic function to handle API errors\nconst handleApiError = (error, defaultMessage) => {\n  var _error$response;\n  console.error(defaultMessage, error);\n  throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n    error: defaultMessage\n  };\n};\n\n// ðŸ”¹ **User Authentication APIs**\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, credentials);\n    console.log(response);\n    return response;\n  } catch (error) {\n    return handleApiError(error, \"Login failed\");\n  }\n};\nexport const registerUser = async data => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, data);\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Registration failed\");\n  }\n};\n\n// ðŸ”¹ **Team APIs**\nexport const createTeam = async teamData => {\n  try {\n    const response = await axios.post(`${API_URL}/teams/create`, teamData, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to create team\");\n  }\n};\nexport const joinTeam = async teamId => {\n  try {\n    const response = await axios.post(`${API_URL}/teams/join/${teamId}`, {}, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to join team\");\n  }\n};\n\n// ðŸ”¹ **Match APIs**\nexport const getMatches = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/matches`);\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to fetch matches\");\n  }\n};\nexport const addMatch = async matchData => {\n  try {\n    const response = await axios.post(`${API_URL}/matches`, matchData, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to add match\");\n  }\n};\n\n// ðŸ”¹ **Question APIs**\nexport const getQuestions = async matchId => {\n  try {\n    const response = await axios.get(`${API_URL}/questions/${matchId}`);\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to fetch questions\");\n  }\n};\nexport const addQuestion = async (matchId, questionData) => {\n  try {\n    const response = await axios.post(`${API_URL}/questions/${matchId}`, questionData, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to add question\");\n  }\n};\nexport const updateCorrectAnswer = async (questionId, correctAnswer) => {\n  try {\n    const response = await axios.put(`${API_URL}/questions/update-answer/${questionId}`, {\n      correctAnswer\n    }, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to update correct answer\");\n  }\n};\nexport const updateCorrectnessForMatch = async matchId => {\n  console.log(matchId);\n  try {\n    const response = await axios.put(`${API_URL}/responses/update-correctness/${matchId}`, {}, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to update response correctness\");\n  }\n};\n\n// ðŸ”¹ **Dashboard API**\nexport const getDashboard = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard`, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to fetch dashboard data\");\n  }\n};\n\n// ðŸ”¹ **Response APIs**\nexport const submitResponse = async data => {\n  const headers = getAuthHeaders();\n  if (!headers) return;\n  try {\n    const response = await axios.post(`${API_URL}/responses`, data, {\n      headers\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Failed to submit response. Please try again.\");\n    return handleApiError(error, \"Failed to submit response\");\n  }\n};\nexport const getAllResponses = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/responses/all-responses`, {\n      headers: getAuthHeaders()\n    });\n    console.log(\"response\", response);\n    return response.data;\n  } catch (error) {\n    return handleApiError(error, \"Failed to fetch responses\");\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAuthHeaders","token","localStorage","getItem","alert","window","location","href","Authorization","handleApiError","error","defaultMessage","_error$response","console","response","data","loginUser","credentials","post","log","registerUser","createTeam","teamData","headers","joinTeam","teamId","getMatches","get","addMatch","matchData","getQuestions","matchId","addQuestion","questionData","updateCorrectAnswer","questionId","correctAnswer","put","updateCorrectnessForMatch","getDashboard","submitResponse","_error$response2","_error$response2$data","getAllResponses"],"sources":["C:/Users/chakr/OneDrive/Desktop/ipl-dashboard/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000\"; // Change if needed\r\n\r\n// âœ… Centralized Token Management\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (!token) {\r\n    alert(\"User not logged in!\");\r\n    window.location.href = \"/login\"; // Redirect to login page\r\n    return null;\r\n  }\r\n\r\n  return { Authorization: `Bearer ${token}` };\r\n};\r\n\r\n// âœ… Generic function to handle API errors\r\nconst handleApiError = (error, defaultMessage) => {\r\n  console.error(defaultMessage, error);\r\n  throw error.response?.data || { error: defaultMessage };\r\n};\r\n\r\n// ðŸ”¹ **User Authentication APIs**\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/auth/login`, credentials);\r\n    console.log(response);\r\n    \r\n    return response;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Login failed\");\r\n  }\r\n};\r\n\r\nexport const registerUser = async (data) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/auth/register`, data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Registration failed\");\r\n  }\r\n};\r\n\r\n// ðŸ”¹ **Team APIs**\r\nexport const createTeam = async (teamData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/teams/create`, teamData, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to create team\");\r\n  }\r\n};\r\n\r\nexport const joinTeam = async (teamId) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/teams/join/${teamId}`, {}, { headers: getAuthHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to join team\");\r\n  }\r\n};\r\n\r\n// ðŸ”¹ **Match APIs**\r\nexport const getMatches = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/matches`);\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to fetch matches\");\r\n  }\r\n};\r\n\r\nexport const addMatch = async (matchData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/matches`, matchData, { headers: getAuthHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to add match\");\r\n  }\r\n};\r\n\r\n// ðŸ”¹ **Question APIs**\r\nexport const getQuestions = async (matchId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/questions/${matchId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to fetch questions\");\r\n  }\r\n};\r\n\r\nexport const addQuestion = async (matchId, questionData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/questions/${matchId}`, questionData, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to add question\");\r\n  }\r\n};\r\n\r\nexport const updateCorrectAnswer = async (questionId, correctAnswer) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/questions/update-answer/${questionId}`,\r\n      { correctAnswer },\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to update correct answer\");\r\n  }\r\n};\r\n\r\nexport const updateCorrectnessForMatch = async (matchId) => {\r\n  console.log(matchId);\r\n  \r\n  try {\r\n    const response = await axios.put(`${API_URL}/responses/update-correctness/${matchId}`, {}, { headers: getAuthHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to update response correctness\");\r\n  }\r\n};\r\n\r\n// ðŸ”¹ **Dashboard API**\r\nexport const getDashboard = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/dashboard`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to fetch dashboard data\");\r\n  }\r\n};\r\n\r\n// ðŸ”¹ **Response APIs**\r\nexport const submitResponse = async (data) => {\r\n  const headers = getAuthHeaders();\r\n  if (!headers) return;\r\n\r\n  try {\r\n    const response = await axios.post(`${API_URL}/responses`, data, { headers });\r\n    return response.data;\r\n  } catch (error) {\r\n    alert(error.response?.data?.error || \"Failed to submit response. Please try again.\");\r\n    return handleApiError(error, \"Failed to submit response\");\r\n  }\r\n};\r\n\r\nexport const getAllResponses = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/responses/all-responses`, { headers: getAuthHeaders() });\r\n    console.log(\"response\",response);\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    return handleApiError(error, \"Failed to fetch responses\");\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}