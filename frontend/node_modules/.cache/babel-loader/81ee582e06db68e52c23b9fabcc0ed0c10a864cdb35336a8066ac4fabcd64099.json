{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chakr\\\\OneDrive\\\\Desktop\\\\ipl-dashboard\\\\frontend\\\\src\\\\components\\\\selectAnswers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMatches, getQuestions, submitResponse, getAllResponses } from \"../api\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { Box, Typography, Button, Radio, RadioGroup, FormControlLabel, FormControl, Card, CardContent, Snackbar, Accordion, AccordionSummary, AccordionDetails, Paper } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Sidebar from \"./sidebar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 50;\nconst SelectAnswers = () => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  const navigate = useNavigate();\n  const [matches, setMatches] = useState([]);\n  const [questionsByMatch, setQuestionsByMatch] = useState({});\n  const [responsesByMatch, setResponsesByMatch] = useState({});\n  const [userResponsesByMatch, setUserResponsesByMatch] = useState({});\n  const [loadingData, setLoadingData] = useState(true);\n  const [questionsExpiredByMatch, setQuestionsExpiredByMatch] = useState({});\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  useEffect(() => {\n    if (!loading && !user) {\n      navigate(\"/\");\n    }\n  }, [user, loading, navigate]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const allMatches = await getMatches();\n        const nowUTC = new Date();\n        const todayUTC = new Date(nowUTC.getTime() + 5.5 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n        const todayMatches = allMatches.filter(m => new Date(m.date).toISOString().split(\"T\")[0] === todayUTC);\n        if (todayMatches.length === 0) {\n          setLoadingData(false);\n          return;\n        }\n        setMatches(todayMatches);\n        const allResponses = await getAllResponses();\n        const updatedQuestionsByMatch = {};\n        const updatedResponsesByMatch = {};\n        const updatedUserResponsesByMatch = {};\n        const updatedQuestionsExpiredByMatch = {};\n        for (const match of todayMatches) {\n          const matchDateTimeUTC = new Date(match.date).toUTCString();\n          const matchDateTime = new Date(matchDateTimeUTC);\n          const thirtyMinutesBeforeMatchUTC = new Date(matchDateTime.getTime() - 360 * 60000);\n          if (nowUTC >= thirtyMinutesBeforeMatchUTC) {\n            updatedQuestionsExpiredByMatch[match._id] = true;\n            continue;\n          }\n          const matchQuestions = await getQuestions(match._id);\n          updatedQuestionsByMatch[match._id] = matchQuestions;\n          const userResponses = allResponses.filter(resp => resp.userId._id === user._id && resp.matchId._id === match._id);\n          if (userResponses.length > 0) {\n            updatedUserResponsesByMatch[match._id] = true;\n            const prefilledResponses = {};\n            userResponses.forEach(resp => {\n              prefilledResponses[resp.questionId] = resp.selectedOption;\n            });\n            updatedResponsesByMatch[match._id] = prefilledResponses;\n          } else {\n            updatedUserResponsesByMatch[match._id] = false;\n          }\n        }\n        setQuestionsByMatch(updatedQuestionsByMatch);\n        setResponsesByMatch(updatedResponsesByMatch);\n        setUserResponsesByMatch(updatedUserResponsesByMatch);\n        setQuestionsExpiredByMatch(prev => ({\n          ...prev,\n          ...updatedQuestionsExpiredByMatch\n        }));\n      } catch (error) {\n        console.error(\"Failed to load data:\", error);\n      } finally {\n        setLoadingData(false);\n      }\n    };\n    fetchData();\n  }, [user]);\n  const handleAnswerSelect = (matchId, questionId, selectedOption) => {\n    setResponsesByMatch(prev => ({\n      ...prev,\n      [matchId]: {\n        ...prev[matchId],\n        [questionId]: selectedOption\n      }\n    }));\n  };\n  const handleSubmit = async matchId => {\n    if (!(user !== null && user !== void 0 && user._id)) {\n      alert(\"User not logged in!\");\n      return;\n    }\n    const matchQuestions = questionsByMatch[matchId] || [];\n    const userResponses = responsesByMatch[matchId] || {};\n    if (matchQuestions.length === 0 || Object.keys(userResponses).length !== matchQuestions.length) {\n      alert(\"Please answer all questions before submitting.\");\n      return;\n    }\n    const responseArray = matchQuestions.map(q => ({\n      userId: user._id,\n      matchId,\n      questionId: q._id,\n      selectedOption: userResponses[q._id]\n    }));\n    try {\n      await Promise.all(responseArray.map(response => submitResponse(response)));\n      setSnackbarOpen(true);\n      setUserResponsesByMatch(prev => ({\n        ...prev,\n        [matchId]: true\n      }));\n    } catch (error) {\n      console.error(\"Failed to submit responses:\", error);\n      alert(\"Failed to submit responses. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    sx: {\n      backgroundColor: \"#e3f2fd\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        marginLeft: `${drawerWidth}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: \"bold\",\n          textAlign: \"center\",\n          mb: 3\n        },\n        children: \"Matches Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), loadingData ? /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : matches.length > 0 ? matches.map(match => {\n        var _questionsByMatch$mat;\n        return /*#__PURE__*/_jsxDEV(Accordion, {\n          sx: {\n            backgroundColor: \"#ffffff\",\n            boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\",\n            marginBottom: 2,\n            borderRadius: \"8px\",\n            \"&:hover\": {\n              backgroundColor: \"#f1f8ff\"\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 45\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                color: \"#000\"\n              },\n              children: match.matchName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              sx: {\n                p: 2,\n                borderRadius: \"8px\"\n              },\n              children: questionsExpiredByMatch[match._id] ? /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: \"red\",\n                  textAlign: \"center\"\n                },\n                children: \"Questions are no longer available (Match starting soon).\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this) : ((_questionsByMatch$mat = questionsByMatch[match._id]) === null || _questionsByMatch$mat === void 0 ? void 0 : _questionsByMatch$mat.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [questionsByMatch[match._id].map(q => {\n                  var _responsesByMatch$mat;\n                  return /*#__PURE__*/_jsxDEV(Card, {\n                    sx: {\n                      mb: 2,\n                      p: 2,\n                      borderRadius: \"8px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        children: q.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        component: \"fieldset\",\n                        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                          value: ((_responsesByMatch$mat = responsesByMatch[match._id]) === null || _responsesByMatch$mat === void 0 ? void 0 : _responsesByMatch$mat[q._id]) || \"\",\n                          onChange: e => handleAnswerSelect(match._id, q._id, e.target.value),\n                          disabled: userResponsesByMatch[match._id],\n                          children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                            value: opt,\n                            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 206,\n                              columnNumber: 82\n                            }, this),\n                            label: opt\n                          }, i, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 206,\n                            columnNumber: 35\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 27\n                    }, this)\n                  }, q._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => handleSubmit(match._id),\n                  disabled: userResponsesByMatch[match._id],\n                  children: userResponsesByMatch[match._id] ? \"Responses Submitted\" : \"Submit Answers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"No questions available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, match._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No matches available today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 3000,\n        message: \"Responses submitted successfully!\",\n        onClose: () => setSnackbarOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectAnswers, \"yZlGciUNa1GcuhmlqhvL//Rr0gE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SelectAnswers;\nexport default SelectAnswers;\nvar _c;\n$RefreshReg$(_c, \"SelectAnswers\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getMatches","getQuestions","submitResponse","getAllResponses","useAuth","Box","Typography","Button","Radio","RadioGroup","FormControlLabel","FormControl","Card","CardContent","Snackbar","Accordion","AccordionSummary","AccordionDetails","Paper","ExpandMoreIcon","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","drawerWidth","SelectAnswers","_s","user","loading","navigate","matches","setMatches","questionsByMatch","setQuestionsByMatch","responsesByMatch","setResponsesByMatch","userResponsesByMatch","setUserResponsesByMatch","loadingData","setLoadingData","questionsExpiredByMatch","setQuestionsExpiredByMatch","snackbarOpen","setSnackbarOpen","fetchData","allMatches","nowUTC","Date","todayUTC","getTime","toISOString","split","todayMatches","filter","m","date","length","allResponses","updatedQuestionsByMatch","updatedResponsesByMatch","updatedUserResponsesByMatch","updatedQuestionsExpiredByMatch","match","matchDateTimeUTC","toUTCString","matchDateTime","thirtyMinutesBeforeMatchUTC","_id","matchQuestions","userResponses","resp","userId","matchId","prefilledResponses","forEach","questionId","selectedOption","prev","error","console","handleAnswerSelect","handleSubmit","alert","Object","keys","responseArray","map","q","Promise","all","response","display","sx","backgroundColor","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","component","flexGrow","p","marginLeft","variant","gutterBottom","fontWeight","textAlign","mb","_questionsByMatch$mat","boxShadow","marginBottom","borderRadius","expandIcon","color","matchName","elevation","_responsesByMatch$mat","text","value","onChange","e","target","disabled","options","opt","i","control","label","onClick","open","autoHideDuration","message","onClose","_c","$RefreshReg$"],"sources":["C:/Users/chakr/OneDrive/Desktop/ipl-dashboard/frontend/src/components/selectAnswers.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getMatches, getQuestions, submitResponse, getAllResponses } from \"../api\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  Card,\r\n  CardContent,\r\n  Snackbar,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Sidebar from \"./sidebar\";\r\n\r\nconst drawerWidth = 50;\r\n\r\nconst SelectAnswers = () => {\r\n  const { user, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [matches, setMatches] = useState([]);\r\n  const [questionsByMatch, setQuestionsByMatch] = useState({});\r\n  const [responsesByMatch, setResponsesByMatch] = useState({});\r\n  const [userResponsesByMatch, setUserResponsesByMatch] = useState({});\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [questionsExpiredByMatch, setQuestionsExpiredByMatch] = useState({});\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [user, loading, navigate]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const allMatches = await getMatches();\r\n        const nowUTC = new Date();\r\n        const todayUTC = new Date(nowUTC.getTime() + 5.5 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\r\n\r\n        const todayMatches = allMatches.filter(\r\n          (m) => new Date(m.date).toISOString().split(\"T\")[0] === todayUTC\r\n        );\r\n\r\n        if (todayMatches.length === 0) {\r\n          setLoadingData(false);\r\n          return;\r\n        }\r\n\r\n        setMatches(todayMatches);\r\n\r\n        const allResponses = await getAllResponses();\r\n        const updatedQuestionsByMatch = {};\r\n        const updatedResponsesByMatch = {};\r\n        const updatedUserResponsesByMatch = {};\r\n        const updatedQuestionsExpiredByMatch = {};\r\n\r\n        for (const match of todayMatches) {\r\n          const matchDateTimeUTC = new Date(match.date).toUTCString();\r\n          const matchDateTime = new Date(matchDateTimeUTC);\r\n          const thirtyMinutesBeforeMatchUTC = new Date(matchDateTime.getTime() - 360 * 60000);\r\n\r\n          if (nowUTC >= thirtyMinutesBeforeMatchUTC) {\r\n            updatedQuestionsExpiredByMatch[match._id] = true;\r\n            continue;\r\n          }\r\n\r\n          const matchQuestions = await getQuestions(match._id);\r\n          updatedQuestionsByMatch[match._id] = matchQuestions;\r\n\r\n          const userResponses = allResponses.filter(\r\n            (resp) => resp.userId._id === user._id && resp.matchId._id === match._id\r\n          );\r\n\r\n          if (userResponses.length > 0) {\r\n            updatedUserResponsesByMatch[match._id] = true;\r\n            const prefilledResponses = {};\r\n            userResponses.forEach((resp) => {\r\n              prefilledResponses[resp.questionId] = resp.selectedOption;\r\n            });\r\n\r\n            updatedResponsesByMatch[match._id] = prefilledResponses;\r\n          } else {\r\n            updatedUserResponsesByMatch[match._id] = false;\r\n          }\r\n        }\r\n\r\n        setQuestionsByMatch(updatedQuestionsByMatch);\r\n        setResponsesByMatch(updatedResponsesByMatch);\r\n        setUserResponsesByMatch(updatedUserResponsesByMatch);\r\n        setQuestionsExpiredByMatch((prev) => ({ ...prev, ...updatedQuestionsExpiredByMatch }));\r\n      } catch (error) {\r\n        console.error(\"Failed to load data:\", error);\r\n      } finally {\r\n        setLoadingData(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user]);\r\n\r\n  const handleAnswerSelect = (matchId, questionId, selectedOption) => {\r\n    setResponsesByMatch((prev) => ({\r\n      ...prev,\r\n      [matchId]: {\r\n        ...prev[matchId],\r\n        [questionId]: selectedOption,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (matchId) => {\r\n    if (!user?._id) {\r\n      alert(\"User not logged in!\");\r\n      return;\r\n    }\r\n\r\n    const matchQuestions = questionsByMatch[matchId] || [];\r\n    const userResponses = responsesByMatch[matchId] || {};\r\n\r\n    if (matchQuestions.length === 0 || Object.keys(userResponses).length !== matchQuestions.length) {\r\n      alert(\"Please answer all questions before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const responseArray = matchQuestions.map((q) => ({\r\n      userId: user._id,\r\n      matchId,\r\n      questionId: q._id,\r\n      selectedOption: userResponses[q._id],\r\n    }));\r\n\r\n    try {\r\n      await Promise.all(responseArray.map((response) => submitResponse(response)));\r\n      setSnackbarOpen(true);\r\n      setUserResponsesByMatch((prev) => ({\r\n        ...prev,\r\n        [matchId]: true,\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Failed to submit responses:\", error);\r\n      alert(\"Failed to submit responses. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" sx={{ backgroundColor: \"#e3f2fd\", minHeight: \"100vh\" }}>\r\n      <Sidebar />\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          marginLeft: `${drawerWidth}px`,\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: \"bold\", textAlign: \"center\", mb: 3 }}>\r\n          Matches Available\r\n        </Typography>\r\n\r\n        {loadingData ? (\r\n          <Typography sx={{ textAlign: \"center\" }}>Loading...</Typography>\r\n        ) : matches.length > 0 ? (\r\n          matches.map((match) => (\r\n            <Accordion\r\n              key={match._id}\r\n              sx={{\r\n                backgroundColor: \"#ffffff\",\r\n                boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\",\r\n                marginBottom: 2,\r\n                borderRadius: \"8px\",\r\n                \"&:hover\": { backgroundColor: \"#f1f8ff\" },\r\n              }}\r\n            >\r\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography sx={{ color: \"#000\" }}>{match.matchName}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Paper elevation={3} sx={{ p: 2, borderRadius: \"8px\" }}>\r\n                  {questionsExpiredByMatch[match._id] ? (\r\n                    <Typography sx={{ color: \"red\", textAlign: \"center\" }}>\r\n                      Questions are no longer available (Match starting soon).\r\n                    </Typography>\r\n                  ) : questionsByMatch[match._id]?.length > 0 ? (\r\n                    <>\r\n                      {questionsByMatch[match._id].map((q) => (\r\n                        <Card key={q._id} sx={{ mb: 2, p: 2, borderRadius: \"8px\" }}>\r\n                          <CardContent>\r\n                            <Typography variant=\"h6\">{q.text}</Typography>\r\n                            <FormControl component=\"fieldset\">\r\n                              <RadioGroup\r\n                                value={responsesByMatch[match._id]?.[q._id] || \"\"}\r\n                                onChange={(e) => handleAnswerSelect(match._id, q._id, e.target.value)}\r\n                                disabled={userResponsesByMatch[match._id]}\r\n                              >\r\n                                {q.options.map((opt, i) => (\r\n                                  <FormControlLabel key={i} value={opt} control={<Radio />} label={opt} />\r\n                                ))}\r\n                              </RadioGroup>\r\n                            </FormControl>\r\n                          </CardContent>\r\n                        </Card>\r\n                      ))}\r\n                      <Button variant=\"contained\" onClick={() => handleSubmit(match._id)} disabled={userResponsesByMatch[match._id]}>\r\n                        {userResponsesByMatch[match._id] ? \"Responses Submitted\" : \"Submit Answers\"}\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <Typography>No questions available.</Typography>\r\n                  )}\r\n                </Paper>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))\r\n        ) : (\r\n          <Typography>No matches available today.</Typography>\r\n        )}\r\n\r\n        <Snackbar open={snackbarOpen} autoHideDuration={3000} message=\"Responses submitted successfully!\" onClose={() => setSnackbarOpen(false)} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SelectAnswers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}